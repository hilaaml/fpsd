#include <iostream>

#include <cstdlib> // rand(), srand()

#include <string>

#include <ctime>

#include <vector>

#include <algorithm> // std::random_shuffle



using namespace std;



const int maxPlayer = 4;

int totalPlayer;

int playerCount = 0;



struct Player {

    string playerName;

    int playerScore;

} P[maxPlayer];



struct Word {

    string kata;

    string hint;

};



void play();

void leaderboards(); // sorting

bool isNameSame(string nama);

void editPlayer(); // struct, array



// Fungsi tambahan untuk permainan tebak kata

Word chooseRandomWord(const vector<Word>& wordList);

void displayStatus(const string& word, const string& guessed);

void playHangman(Player& player);



int main()

{

    int pilih;

    do {

        cout << "Permainan Tebak Kata\n";

        cout << "Menu:\n1. Mulai main\t\t3. Papan Skor \n2. Tambah Pemain  \t0. Keluar\n\n";

        cout << "Masukkan pilihan = "; cin >> pilih;

        system("cls");

        switch (pilih) {

        case 0:

            break;

        case 1:

            play();

            break;

        case 2:

            editPlayer();

            break;

        case 3:

            leaderboards();

            break;

        default:

            cout << "Pilihan salah.";

        }

        cout << "\n";

    } while (pilih != 0);

    return 0;

}



bool isNameSame(string nama) {

    for (int i = 0; i < playerCount; i++) {

        if (P[i].playerName == nama) {

            return true;

        }

    }

    return false;

}



void editPlayer() {

    cout << "Jumlah pemain saat ini adalah " << playerCount << ". " << endl;

    cout << "Masukkan jumlah pemain = "; cin >> totalPlayer;

    if (totalPlayer + playerCount <= maxPlayer) {

        for (int i = 0; i < totalPlayer; i++) {

            string nama;

            cout << "Masukkan nama pemain ke-" << (playerCount + 1) << " = ";

            cin >> nama;

            if (isNameSame(nama)) {

                cout << "Nama pemain sudah ada. Silahkan masukkan nama lain." << endl;

                i--;

            }

            else {

                P[playerCount].playerName = nama;

                P[playerCount].playerScore = 0; // Initialize score to 0

                playerCount++;

            }

        }

    }

    else {

        cout << "Maaf, jumlah pemain melebihi jumlah pemain maksimal";

    }

}



void leaderboards() {

    int i, j;

    Player tempPlayer; // membuat variabel untuk menyimpan sementara

    for (i = 1; i < playerCount; i++) {

        tempPlayer = P[i];

        j = i - 1;



        while ((j >= 0) && (P[j].playerScore < tempPlayer.playerScore)) {

            P[j + 1] = P[j];

            j--;

        }

        P[j + 1] = tempPlayer;

    }

    cout << "Peringkat\tNama Pemain\tSkor\n";

    for (int i = 0; i < playerCount; i++) {

        cout << i + 1 << ".\t\t" << P[i].playerName << "\t\t" << P[i].playerScore << endl;

    }

}



void play() {

    if (playerCount == 0) {

        cout << "Permainan gagal dimulai. ";

        editPlayer();

    }

    else {

        for (int i = 0; i < playerCount; i++) {

            char playChoice;

            cout << "\nGiliran " << P[i].playerName << " bermain. ";

            cout << "Apakah Anda ingin bermain? (y/n): ";

            cin >> playChoice;

            system("cls");

            if (playChoice == 'y' || playChoice == 'Y') {

                playHangman(P[i]);

                cout << "Skor " << P[i].playerName << " adalah: " << P[i].playerScore << "\n";

            }

            else {

                cout << "Player " << P[i].playerName << " melewati giliran." << endl;

                cout << "Skor " << P[i].playerName << " adalah: " << P[i].playerScore << "\n";

            }

        }

    }

}



Word chooseRandomWord(const vector<Word>& wordList) {

    srand(time(0)); // Menginisialisasi generator angka acak

    int randomIndex = rand() % wordList.size();

    return wordList[randomIndex];

}



void displayStatus(const string& word, const string& guessed) {

    for (char c : word) {

        if (guessed.find(c) != string::npos) {

            cout << c << " ";

        }

        else {

            cout << "_ ";

        }

    }

    cout << endl;

}



void playHangman(Player& player) {

    vector<Word> wordList = { {"programming", "The act or process of writing computer programs."},

                              {"computer", "An electronic device for storing and processing data."},

                              {"science", "The intellectual and practical activity encompassing the systematic study of the structure and behavior of the physical and natural world."},

                              {"hangman", "A game where players guess a word by suggesting letters."},

                              {"keyboard", "An input device used for typing characters into a computer."} };

    Word wordToGuess = chooseRandomWord(wordList);

    string guessedLetters = "";

    int attemptsLeft = wordToGuess.kata.length() / 2; // Jumlah kesempatan menebak huruf yang salah



    cout << "Hint: " << wordToGuess.hint << endl;



    while (attemptsLeft > 0) {

        displayStatus(wordToGuess.kata, guessedLetters);

        cout << "Masukkan tebakan Anda: ";

        string guess;

        cin >> guess;

        system("cls");



        // Periksa apakah input berisi hanya huruf

        bool validInput = true;

        for (char c : guess) {

            if (!isalpha(c)) {

                validInput = false;

                break;

            }

        }



        if (!validInput) {

            

            cout << "Masukkan hanya huruf." << endl;

            continue;

        }



        // Periksa apakah panjang input sesuai dengan jumlah huruf yang ditebak

        if (guess.length() != 1 && guess.length() != wordToGuess.kata.length()) {

            cout << "Masukkan satu huruf atau tebakan yang sesuai dengan panjang kata." << endl;

            continue;

        }



        // Tambahkan huruf ke daftar tebakan

        guessedLetters += guess;



        // Periksa apakah huruf ada di dalam kata

        bool correctGuess = true;

        for (char c : guess) {

            if (wordToGuess.kata.find(c) == string::npos) {

                correctGuess = false;

                break;

            }

        }



        if (correctGuess) {

            cout << "Tebakan Anda benar!" << endl;

        }

        else {

            cout << "Tebakan Anda salah!" << endl;

            attemptsLeft--;

            cout << "Kesempatan yang tersisa: " << attemptsLeft << endl;

        }



        // Periksa apakah semua huruf sudah ditebak

        bool allGuessed = true;

        for (char c : wordToGuess.kata) {

            if (guessedLetters.find(c) == string::npos) {

                allGuessed = false;

                break;

            }

        }



        if (allGuessed) {

            cout << "Selamat! Anda berhasil menebak kata " << wordToGuess.kata << ".\n";

            player.playerScore += 10; // Menambah skor pemain jika berhasil menebak kata

            return;

        }

    }



    cout << "Kesempatan Anda habis! Kata yang harus ditebak adalah " << wordToGuess.kata << ".\n";

}
